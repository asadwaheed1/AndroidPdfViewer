apply plugin: 'maven-publish'
apply plugin: 'signing'

def isAndroid = plugins.hasPlugin('com.android.library')

group = PUBLISH_GROUP_ID
version = PUBLISH_VERSION

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId PUBLISH_GROUP_ID
                artifactId PUBLISH_ARTIFACT_ID
                version PUBLISH_VERSION

                if (isAndroid) {
                    from components.findByName("release") ?: components.findByName("default")
                } else {
                    from components.java
                }

                pom {
                    name = PUBLISH_ARTIFACT_ID
                    description = 'Fork of Barteksc AndroidPdfViewer - Android view for displaying PDFs rendered with PdfiumAndroid'
                    url = 'https://github.com/oothp/AndroidPdfViewer'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'oothp'
                            name = 'oothp'
                        }
                    }
                    scm {
                        connection = 'scm:git:https://github.com/oothp/AndroidPdfViewer.git'
                        developerConnection = 'scm:git:ssh://git@github.com/oothp/AndroidPdfViewer.git'
                        url = 'https://github.com/oothp/AndroidPdfViewer'
                    }
                }
            }
        }
        repositories {
            maven {
                name = "Sonatype"
                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                credentials {
                    username = findProperty("ossrhUsername") ?: System.getenv("MAVEN_USERNAME") ?: ""
                    password = findProperty("ossrhToken") ?: System.getenv("MAVEN_TOKEN") ?: ""
                }
            }
        }
    }
}

gradle.taskGraph.whenReady { graph ->
    if (graph.hasTask(":android-pdf-viewer:signReleasePublication") && !gradle.startParameter.taskNames.any { it.toLowerCase().contains("publishtomavenlocal") }) {
        signing {
            def keyId = findProperty("signing.keyId") ?: System.getenv("SIGNING_KEY_ID")
            def key = findProperty("signing.key") ?: System.getenv("SIGNING_KEY")
            def password = findProperty("signing.password") ?: System.getenv("SIGNING_PASSWORD") ?: ""

            if (!keyId || !key || !password) {
                throw new GradleException("Missing signing properties: keyId=$keyId, key=$key, password=$password")
            }
            useInMemoryPgpKeys(keyId, key, password)
            sign publishing.publications
        }
    }
}